@page "/Security/Role/Create"
@rendermode InteractiveServer
@inject IRoleService RoleService
@using Hexalith.Security.Application
@using Microsoft.FluentUI.AspNetCore.Components
@inject NavigationManager NavigationManager
@using Labels = Hexalith.Security.UI.Pages.Resources.Roles.Roles

<FluentStack Orientation="Orientation.Vertical">
    <FluentLabel Typo="Typography.PageTitle">@Labels.CreateTitle</FluentLabel>
    
    <FluentStack Orientation="Orientation.Vertical">
        <FluentLabel>@Labels.Name</FluentLabel>
        <FluentTextField @bind-Value="@_roleName" />
        @if (_showValidationError)
        {
            <FluentMessageBar Intent="MessageIntent.Error">Role name is required</FluentMessageBar>
        }
    </FluentStack>
    
    <FluentStack Orientation="Orientation.Horizontal">
        <FluentButton Appearance="Appearance.Accent" @onclick="CreateRoleAsync">@Labels.Create</FluentButton>
        <FluentButton @onclick="NavigateToList">@Labels.Cancel</FluentButton>
    </FluentStack>
</FluentStack>

@code {
    private string _roleName = string.Empty;
    private bool _isProcessing;
    private bool _showValidationError;

    private async Task CreateRoleAsync()
    {
        if (_isProcessing) return;
        if (string.IsNullOrWhiteSpace(_roleName))
        {
            _showValidationError = true;
            return;
        }

        try
        {
            _isProcessing = true;
            _showValidationError = false;
            await RoleService.CreateAsync(_roleName, CancellationToken.None);
            NavigateToList();
        }
        finally
        {
            _isProcessing = false;
        }
    }

    private void NavigateToList()
    {
        NavigationManager.NavigateTo("/Security/Role");
    }
} 